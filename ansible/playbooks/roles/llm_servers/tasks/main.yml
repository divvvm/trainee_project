---
- name: Update apt cache
  apt:
    update_cache: yes
    cache_valid_time: 3600
  tags: [setup]

- name: Install required packages
  apt:
    name:
      - python3-pip
      - curl
      - wget
      - software-properties-common
    state: present
    update_cache: no
  tags: [setup]

- name: Install Python dependencies for FastAPI
  pip:
    name:
      - fastapi
      - uvicorn
      - requests
      - psycopg2-binary
    executable: pip3
    state: present
  tags: [fastapi]

- name: Create log file for Ollama
  file:
    path: "{{ ollama_log }}"
    state: touch
    owner: ubuntu
    group: ubuntu
    mode: '0644'
  tags: [ollama]

- name: Install Ollama
  shell: curl -fsSL https://ollama.com/install.sh | sh
  args:
    creates: /usr/local/bin/ollama
  tags: [ollama]

- name: Pull llama3 model
  become: false
  shell: ollama pull llama3
  args:
    creates: /home/ubuntu/.ollama/models/blobs/sha256-6a0746a1ec1aef3e7ec53868f220ff6e389f6f8ef87a01d77c96807de94ca2aa
  register: pull_result
  failed_when: "'no space left on device' in pull_result.stderr"
  tags: [ollama]

- name: Stop and disable default Ollama service (if exists)
  systemd:
    name: ollama
    state: stopped
    enabled: no
  ignore_errors: yes
  tags: [ollama]

- name: Create Ollama systemd service
  template:
    src: ollama.service.j2
    dest: /etc/systemd/system/ollama.service
    mode: '0644'
  register: ollama_service
  tags: [ollama]

- name: Enable and start Ollama service
  systemd:
    name: ollama
    enabled: yes
    state: started
    daemon_reload: yes
  when: ollama_service.changed
  tags: [ollama]

- name: Create log file for FastAPI
  file:
    path: "{{ fastapi_log }}"
    state: touch
    owner: ubuntu
    group: ubuntu
    mode: '0644'
  tags: [fastapi]

- name: Deploy FastAPI app (main.py)
  copy:
    src: main.py
    dest: "{{ app_path }}/main.py"
    owner: ubuntu
    group: ubuntu
    mode: '0644'
  register: app_deployment
  tags: [fastapi]

- name: Create FastAPI systemd service
  template:
    src: fastapi.service.j2
    dest: /etc/systemd/system/fastapi.service
    mode: '0644'
  register: fastapi_service
  tags: [fastapi]

- name: Enable and start FastAPI service
  systemd:
    name: fastapi
    enabled: yes
    state: started
    daemon_reload: yes
  when: fastapi_service.changed or app_deployment.changed
  tags: [fastapi]

- name: Add Grafana GPG key
  shell: wget -q -O - https://apt.grafana.com/gpg.key | gpg --dearmor | tee /usr/share/keyrings/grafana-archive-keyring.gpg > /dev/null
  args:
    creates: /usr/share/keyrings/grafana-archive-keyring.gpg
  tags: [alloy]

- name: Add Grafana APT repository
  apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/grafana-archive-keyring.gpg] https://apt.grafana.com stable main"
    state: present
    filename: grafana
  tags: [alloy]

- name: Install Grafana Alloy
  apt:
    name: alloy
    state: present
    update_cache: yes
  tags: [alloy]

- name: Create Alloy configuration directory
  file:
    path: /etc/alloy
    state: directory
    owner: root
    group: root
    mode: '0755'
  tags: [alloy]

- name: Deploy Alloy configuration file
  template:
    src: alloy-config.river.j2
    dest: /etc/alloy/config.alloy
    owner: root
    group: root
    mode: '0644'
  notify: Restart Alloy
  tags: [alloy]

- name: Enable and start Alloy service
  systemd:
    name: alloy
    enabled: yes
    state: started
    daemon_reload: yes
  tags: [alloy]